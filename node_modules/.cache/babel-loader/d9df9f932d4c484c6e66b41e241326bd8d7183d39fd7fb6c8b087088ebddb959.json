{"ast":null,"code":"var _jsxFileName = \"/Users/raethexn/Documents/GitHub/AnthonyMercadante.github.io/src/components/BotInteraction/BotInteraction.tsx\",\n  _s = $RefreshSig$();\n// React imports\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, IconButton, TextField, Button, List, ListItem, ListItemText } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotInteraction = () => {\n  _s();\n  const navigate = useNavigate();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleBack = () => {\n    navigate(-1); // Navigate back to the previous page\n  };\n  const handleSendMessage = async () => {\n    const userInput = input.trim();\n    if (userInput) {\n      // Add the user's message to the chat display\n      setMessages(messages => [...messages, {\n        text: userInput,\n        sender: 'user'\n      }]);\n      setInput('');\n      try {\n        // Send the message to the Flask backend\n        const response = await fetch('http://localhost:5001/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: userInput\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Add the bot's response to the chat display\n        setMessages(messages => [...messages, {\n          text: data.response,\n          sender: 'bot'\n        }]);\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        // Optionally handle the error, e.g., show an error message in the chat\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBack,\n      sx: {\n        position: 'absolute',\n        top: 20,\n        left: 20,\n        zIndex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Real Estate AI Bot Interaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: 600,\n        minHeight: 400,\n        bgcolor: 'background.paper',\n        borderRadius: 2,\n        padding: 2,\n        marginTop: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          style: {\n            alignSelf: message.sender === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: message.text,\n            sx: {\n              wordBreak: 'break-word',\n              background: message.sender === 'user' ? '#e0e0e0' : '#9fa8da',\n              borderRadius: '10px',\n              padding: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message here...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n          sx: {\n            mr: 1,\n            bgcolor: 'background.paper'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 58\n          }, this),\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(BotInteraction, \"L0/BYRbxd9vWjicv6X5vz2ivLU0=\", false, function () {\n  return [useNavigate];\n});\n_c = BotInteraction;\nexport default BotInteraction;\nvar _c;\n$RefreshReg$(_c, \"BotInteraction\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Typography","IconButton","TextField","Button","List","ListItem","ListItemText","ArrowBackIcon","SendIcon","jsxDEV","_jsxDEV","BotInteraction","_s","navigate","input","setInput","messages","setMessages","handleBack","handleSendMessage","userInput","trim","text","sender","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","status","data","json","error","console","sx","padding","display","flexDirection","alignItems","justifyContent","bgcolor","color","height","children","onClick","position","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","width","maxWidth","minHeight","borderRadius","marginTop","maxHeight","overflow","map","index","style","alignSelf","primary","wordBreak","background","component","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","mr","endIcon","_c","$RefreshReg$"],"sources":["/Users/raethexn/Documents/GitHub/AnthonyMercadante.github.io/src/components/BotInteraction/BotInteraction.tsx"],"sourcesContent":["// React imports\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, IconButton, TextField, Button, List, ListItem, ListItemText, Paper } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\n\ntype Message = {\n    text: string;\n    sender: string;\n};\n\nconst BotInteraction = () => {\n    const navigate = useNavigate();\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState<Message[]>([]);\n\n    const handleBack = () => {\n        navigate(-1); // Navigate back to the previous page\n    };\n\n    const handleSendMessage = async () => {\n        const userInput = input.trim();\n        if (userInput) {\n            // Add the user's message to the chat display\n            setMessages(messages => [...messages, { text: userInput, sender: 'user' }]);\n            setInput('');\n\n            try {\n                // Send the message to the Flask backend\n                const response = await fetch('http://localhost:5001/chat', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ message: userInput }),\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Error: ${response.status}`);\n                }\n\n                const data = await response.json();\n\n                // Add the bot's response to the chat display\n                setMessages(messages => [...messages, { text: data.response, sender: 'bot' }]);\n            } catch (error) {\n                console.error('Failed to send message:', error);\n                // Optionally handle the error, e.g., show an error message in the chat\n            }\n        }\n    };\n\n\n    return (\n        <Box sx={{ padding: 4, display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', bgcolor: 'background.default', color: 'text.primary', height: '80vh', }}>\n            <IconButton onClick={handleBack} sx={{ position: 'absolute', top: 20, left: 20, zIndex: 1 }}>\n                <ArrowBackIcon />\n            </IconButton>\n            <Typography variant=\"h4\" gutterBottom>\n                Real Estate AI Bot Interaction\n            </Typography>\n            <Box sx={{ width: '100%', maxWidth: 600, minHeight: 400, bgcolor: 'background.paper', borderRadius: 2, padding: 2, marginTop: 1 }}>\n                <List sx={{ maxHeight: 300, overflow: 'auto' }}>\n                    {messages.map((message, index) => (\n                        <ListItem key={index} style={{ alignSelf: message.sender === 'user' ? 'flex-end' : 'flex-start' }}>\n                            <ListItemText\n                                primary={message.text}\n                                sx={{ wordBreak: 'break-word', background: message.sender === 'user' ? '#e0e0e0' : '#9fa8da', borderRadius: '10px', padding: '10px' }}\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n                <Box component=\"form\" sx={{ display: 'flex', alignItems: 'center', marginTop: 1 }}>\n                    <TextField\n                        fullWidth\n                        variant=\"outlined\"\n                        placeholder=\"Type your message here...\"\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                        sx={{ mr: 1, bgcolor: 'background.paper' }}\n                    />\n                    <Button variant=\"contained\" endIcon={<SendIcon />} onClick={handleSendMessage}>\n                        Send\n                    </Button>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default BotInteraction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}