{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\AnthonyMercadante.github.io\\\\src\\\\components\\\\RealEstateBot\\\\RealEstateBot.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, useTheme } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealEstateBot = () => {\n  _s();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const style = {\n    container: {\n      padding: theme.spacing(3),\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.background.default,\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    header: {\n      marginBottom: theme.spacing(2)\n    },\n    paragraph: {\n      marginBottom: theme.spacing(1)\n    },\n    featureBox: {\n      marginTop: theme.spacing(4),\n      textAlign: 'left'\n    },\n    featureHeading: {\n      marginBottom: theme.spacing(1)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: style.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      sx: style.header,\n      children: \"RealEstate AI Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: style.paragraph,\n      children: \"This script defines the core functionality of a Real Estate Assistant Discord Bot. It integrates with OpenAI's GPT models to process user inquiries related to the real estate market, focusing on the Toronto and Ontario regions. The bot maintains a conversation history for context management, analyzes word frequency vectors, classifies utterances for emotional tone or speech act, and uses two different OpenAI API calls (completion and chat models) to generate informative and relevant responses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: style.paragraph,\n      children: \"The script handles the construction of prompts for the OpenAI API, manages conversation history, analyzes word frequency, classifies utterances, determines the relevance and redundancy of responses, and decides the final response to be sent to the user. It is designed to be integrated with a Discord bot client for interaction in a Discord server environment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: style.featureBox,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: style.featureHeading,\n        children: \"Key Features:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Utilizes OpenAI's powerful language models to answer real estate-related queries.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Analyzes word frequency vectors for better understanding of queries.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Classifies utterances based on emotional tone or speech act.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Maintains conversation context for more coherent and relevant interactions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Employs two distinct models (completion and chat) for varied response generation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Implements relevance and redundancy checks to optimize response quality.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(RealEstateBot, \"juHf+cd7fzq7HP7pR78ZTOcoxCg=\", false, function () {\n  return [useNavigate, useTheme];\n});\n_c = RealEstateBot;\nexport default RealEstateBot;\nvar _c;\n$RefreshReg$(_c, \"RealEstateBot\");","map":{"version":3,"names":["React","Box","Typography","useTheme","useNavigate","jsxDEV","_jsxDEV","RealEstateBot","_s","navigate","theme","style","container","padding","spacing","color","palette","common","white","backgroundColor","background","default","minHeight","display","flexDirection","alignItems","justifyContent","header","marginBottom","paragraph","featureBox","marginTop","textAlign","featureHeading","sx","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/Projects/AnthonyMercadante.github.io/src/components/RealEstateBot/RealEstateBot.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Button, Grid, Typography, useTheme } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RealEstateBot = () => {\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n\r\n    const style = {\r\n        container: {\r\n            padding: theme.spacing(3),\r\n            color: theme.palette.common.white,\r\n            backgroundColor: theme.palette.background.default,\r\n            minHeight: '100vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        header: {\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        paragraph: {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n        featureBox: {\r\n            marginTop: theme.spacing(4),\r\n            textAlign: 'left',\r\n        },\r\n        featureHeading: {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Box sx={style.container}>\r\n            <Typography variant=\"h2\" sx={style.header}>RealEstate AI Bot</Typography>\r\n            <Typography variant=\"body1\" sx={style.paragraph}>\r\n            This script defines the core functionality of a Real Estate Assistant Discord Bot.\r\n            It integrates with OpenAI's GPT models to process user inquiries related to the real estate market, focusing on the Toronto and Ontario regions. \r\n            The bot maintains a conversation history for context management, analyzes word frequency vectors, classifies utterances for emotional tone or speech act, and uses two different OpenAI API calls (completion and chat models) to generate informative and relevant responses.\r\n            </Typography>\r\n            <br></br><br></br>\r\n            <Typography variant=\"body1\" sx={style.paragraph}>\r\n            The script handles the construction of prompts for the OpenAI API, manages conversation history, \r\nanalyzes word frequency, classifies utterances, determines the relevance and redundancy of responses, \r\nand decides the final response to be sent to the user. It is designed to be integrated with a Discord \r\nbot client for interaction in a Discord server environment.\r\n            </Typography>\r\n\r\n            <Box sx={style.featureBox}>\r\n                <Typography variant=\"h4\" sx={style.featureHeading}>Key Features:</Typography>\r\n                <ul>\r\n                    <li><Typography variant=\"body1\">Utilizes OpenAI's powerful language models to answer real estate-related queries.</Typography></li>\r\n                    <li><Typography variant=\"body1\">Analyzes word frequency vectors for better understanding of queries.</Typography></li>\r\n                    <li><Typography variant=\"body1\">Classifies utterances based on emotional tone or speech act.</Typography></li>\r\n                    <li><Typography variant=\"body1\">Maintains conversation context for more coherent and relevant interactions.</Typography></li>\r\n                    <li><Typography variant=\"body1\">Employs two distinct models (completion and chat) for varied response generation.</Typography></li>\r\n                    <li><Typography variant=\"body1\">Implements relevance and redundancy checks to optimize response quality.</Typography></li>\r\n                </ul>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RealEstateBot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}