{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\AnthonyMercadante.github.io\\\\src\\\\components\\\\BotInteraction\\\\BotInteraction.tsx\",\n  _s = $RefreshSig$();\n// React imports\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, IconButton, TextField, Button, List, ListItem, ListItemText } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotInteraction = () => {\n  _s();\n  const navigate = useNavigate();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleBack = () => {\n    navigate(-1); // Navigate back to the previous page\n  };\n  const handleSendMessage = () => {\n    // Add message to the chat display and clear input\n    if (input.trim()) {\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }]);\n      setInput('');\n\n      // Here, you can also send the message to your Python backend and get the response\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBack,\n      sx: {\n        position: 'absolute',\n        top: 20,\n        left: 20,\n        zIndex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Real Estate AI Bot Interaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: 600,\n        minHeight: 400,\n        bgcolor: 'background.paper',\n        borderRadius: 2,\n        padding: 2,\n        marginTop: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: message.text,\n            sx: {\n              wordBreak: 'break-word'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message here...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n          sx: {\n            mr: 1,\n            bgcolor: 'background.paper'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 58\n          }, this),\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(BotInteraction, \"L0/BYRbxd9vWjicv6X5vz2ivLU0=\", false, function () {\n  return [useNavigate];\n});\n_c = BotInteraction;\nexport default BotInteraction;\nvar _c;\n$RefreshReg$(_c, \"BotInteraction\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Typography","IconButton","TextField","Button","List","ListItem","ListItemText","ArrowBackIcon","SendIcon","jsxDEV","_jsxDEV","BotInteraction","_s","navigate","input","setInput","messages","setMessages","handleBack","handleSendMessage","trim","text","sender","sx","padding","display","flexDirection","alignItems","justifyContent","bgcolor","color","height","children","onClick","position","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","width","maxWidth","minHeight","borderRadius","marginTop","maxHeight","overflow","map","message","index","primary","wordBreak","component","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","mr","endIcon","_c","$RefreshReg$"],"sources":["A:/Projects/AnthonyMercadante.github.io/src/components/BotInteraction/BotInteraction.tsx"],"sourcesContent":["// React imports\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box, Typography, IconButton, TextField, Button, List, ListItem, ListItemText, Paper } from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\ntype Message = {\r\n    text: string;\r\n    sender: string;\r\n};\r\n\r\nconst BotInteraction = () => {\r\n    const navigate = useNavigate();\r\n    const [input, setInput] = useState('');\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n\r\n    const handleBack = () => {\r\n        navigate(-1); // Navigate back to the previous page\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        // Add message to the chat display and clear input\r\n        if (input.trim()) {\r\n            setMessages([...messages, { text: input, sender: 'user' }]);\r\n            setInput('');\r\n\r\n            // Here, you can also send the message to your Python backend and get the response\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ padding: 4, display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', bgcolor: 'background.default', color: 'text.primary', height: '100vh' }}>\r\n            <IconButton onClick={handleBack} sx={{ position: 'absolute', top: 20, left: 20, zIndex: 1 }}>\r\n                <ArrowBackIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Real Estate AI Bot Interaction\r\n            </Typography>\r\n            <Box sx={{ width: '100%', maxWidth: 600, minHeight: 400, bgcolor: 'background.paper', borderRadius: 2, padding: 2, marginTop: 1 }}>\r\n                <List sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n                    {messages.map((message, index) => (\r\n                        <ListItem key={index}>\r\n                            <ListItemText primary={message.text} sx={{ wordBreak: 'break-word' }} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Box component=\"form\" sx={{ display: 'flex', alignItems: 'center', marginTop: 1 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Type your message here...\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                        sx={{ mr: 1, bgcolor: 'background.paper' }}\r\n                    />\r\n                    <Button variant=\"contained\" endIcon={<SendIcon />} onClick={handleSendMessage}>\r\n                        Send\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default BotInteraction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}